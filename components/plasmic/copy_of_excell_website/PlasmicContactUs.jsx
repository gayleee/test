/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: dFCW3EJJak7e5FJ1Eb9ZNV
// Component: yCtWMX5HRdDw
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant,
  useCurrentUser,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import { useScreenVariants as useScreenVariants_3Kid9VNeHn18 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 3kid9VNeHn18/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: dFCW3EJJak7e5FJ1Eb9ZNV/projectcss
import sty from "./PlasmicContactUs.module.css"; // plasmic-import: yCtWMX5HRdDw/css
import TelephoneFillSvgIcon from "./icons/PlasmicIcon__TelephoneFillSvg"; // plasmic-import: Pe8zJQzs_cEp/icon
import Linkedin1SvgIcon from "./icons/PlasmicIcon__Linkedin1Svg"; // plasmic-import: bwKidcjVlOgv/icon
import EnvelopeFillSvgIcon from "./icons/PlasmicIcon__EnvelopeFillSvg"; // plasmic-import: PrfGJ4DLIhKy/icon
import Facebook1SvgIcon from "./icons/PlasmicIcon__Facebook1Svg"; // plasmic-import: D-hfs79gQmG9/icon
import GeoAltFill1SvgIcon from "./icons/PlasmicIcon__GeoAltFill1Svg"; // plasmic-import: YEWPN-2nVWdu/icon
import EnvelopeFill1SvgIcon from "./icons/PlasmicIcon__EnvelopeFill1Svg"; // plasmic-import: yiqTHAMM2X5j/icon
import Linkedin2SvgIcon from "./icons/PlasmicIcon__Linkedin2Svg"; // plasmic-import: 6HNgcahnQu82/icon
import Facebook2SvgIcon from "./icons/PlasmicIcon__Facebook2Svg"; // plasmic-import: IENMmqVlMhTI/icon
import ArrowUpRightCircleFill2SvgIcon from "./icons/PlasmicIcon__ArrowUpRightCircleFill2Svg"; // plasmic-import: pCYqUEbGa2Pj/icon

createPlasmicElementProxy;

export const PlasmicContactUs__VariantProps = new Array();

export const PlasmicContactUs__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicContactUs__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "variable",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_3Kid9VNeHn18()
  });
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"contactUsPage"}
          data-plasmic-override={overrides.contactUsPage}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.contactUsPage
          )}
          id={``}
        >
          <div
            data-plasmic-name={"landingPage"}
            data-plasmic-override={overrides.landingPage}
            className={classNames(projectcss.all, sty.landingPage)}
          >
            <div
              data-plasmic-name={"container2"}
              data-plasmic-override={overrides.container2}
              className={classNames(projectcss.all, sty.container2)}
            >
              <div
                data-plasmic-name={"heading"}
                data-plasmic-override={overrides.heading}
                className={classNames(projectcss.all, sty.heading)}
              >
                <div className={classNames(projectcss.all, sty.column__tdu6C)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mk7Tw)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__iTjic)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "223px"
                          : "317px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"16px"}
                      loading={"lazy"}
                    />

                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__bRcV9
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{"Got Questions?\n"}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Reach us Today"}
                          </span>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{"Got Questions?\n"}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Reach us Today"}
                          </span>
                        </React.Fragment>
                      )}
                    </h1>
                  </div>
                </div>
              </div>
            </div>
            <NavigationBar
              data-plasmic-name={"navigationBar"}
              data-plasmic-override={overrides.navigationBar}
              brand={
                <PlasmicLink__
                  data-plasmic-name={"logo3"}
                  data-plasmic-override={overrides.logo3}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.logo3
                  )}
                  component={Link}
                  href={"#"}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___8A9Qz)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"298px"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    src={{
                      src: "/plasmic/copy_of_excell_website/images/layer2.svg",
                      fullWidth: 220.00169372558594,
                      fullHeight: 80.00094604492188,
                      aspectRatio: 2.75
                    }}
                  />
                </PlasmicLink__>
              }
              className={classNames("__wab_instance", sty.navigationBar)}
              closeButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___4FcVd)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  src={{
                    src: "/plasmic/copy_of_excell_website/images/xLgSvg2.svg",
                    fullWidth: 24,
                    fullHeight: 25,
                    aspectRatio: 0.96
                  }}
                />
              }
              forceOpenMenu={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : false
              }
              itemsGap={
                hasVariant(globalVariants, "screen", "mobileOnly") ? 48 : 48
              }
              menuItems={
                <React.Fragment>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__d10T
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    {"Home"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    data-plasmic-name={"solution3"}
                    data-plasmic-override={overrides.solution3}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.solution3
                    )}
                    component={Link}
                    href={`/solutions`}
                    platform={"nextjs"}
                  >
                    {"Solution"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__ldJb7
                    )}
                    component={Link}
                    href={`/projects`}
                    platform={"nextjs"}
                  >
                    {"Projects"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    data-plasmic-name={"logo4"}
                    data-plasmic-override={overrides.logo4}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.logo4
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__fm51)}
                      displayHeight={"64px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"298px"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      src={{
                        src: "/plasmic/copy_of_excell_website/images/excellVerticalLogoPng.png",
                        fullWidth: 987,
                        fullHeight: 1002,
                        aspectRatio: undefined
                      }}
                    />
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__yAg0V
                    )}
                    component={Link}
                    href={`/about`}
                    platform={"nextjs"}
                  >
                    {"About"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___59Hpu
                    )}
                    component={Link}
                    href={`/learn`}
                    platform={"nextjs"}
                  >
                    {"Learn"}
                  </PlasmicLink__>
                  <PlasmicLink__
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___9WYIr
                    )}
                    component={Link}
                    href={`/contact`}
                    platform={"nextjs"}
                  >
                    {"Contact Us"}
                  </PlasmicLink__>
                </React.Fragment>
              }
              openButton={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__jYdtc)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  src={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? {
                          src: "/plasmic/copy_of_excell_website/images/hamburgerMenuSvg.svg",
                          fullWidth: 24,
                          fullHeight: 25,
                          aspectRatio: 0.96
                        }
                      : undefined
                  }
                  width={"32"}
                />
              }
              responsiveBreakpoint={768}
            />
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"container"}
            data-plasmic-override={overrides.container}
            hasGap={true}
            className={classNames(projectcss.all, sty.container)}
            id={"reach-out-section"}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"card"}
              data-plasmic-override={overrides.card}
              hasGap={true}
              className={classNames(projectcss.all, sty.card)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___6ZgWx)}
              >
                <div
                  data-plasmic-name={"contactCard"}
                  data-plasmic-override={overrides.contactCard}
                  className={classNames(projectcss.all, sty.contactCard)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__t9JNj)}
                  >
                    <TelephoneFillSvgIcon
                      className={classNames(projectcss.all, sty.svg__fr6V)}
                      role={"img"}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rnnvn)}
                    >
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__tikAt
                        )}
                      >
                        {"Contact "}
                      </h4>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dDMz
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cvkWa
                          )}
                        >
                          {"(+63)912345678"}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
                <div
                  data-plasmic-name={"contactCard2"}
                  data-plasmic-override={overrides.contactCard2}
                  className={classNames(projectcss.all, sty.contactCard2)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xwfuk)}
                  >
                    <Linkedin1SvgIcon
                      className={classNames(projectcss.all, sty.svg__bw4R9)}
                      role={"img"}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__iyrde)}
                    >
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__qw65
                        )}
                      >
                        {"LinkedIn"}
                      </h4>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__w0Sxy
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gfVX
                          )}
                        >
                          {"Excell Energy"}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___9Gzjm)}
              >
                <div
                  data-plasmic-name={"contactCard3"}
                  data-plasmic-override={overrides.contactCard3}
                  className={classNames(projectcss.all, sty.contactCard3)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yRuJu)}
                  >
                    <EnvelopeFillSvgIcon
                      className={classNames(projectcss.all, sty.svg__yYa7K)}
                      role={"img"}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__p4GZi)}
                    >
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__dFuwn
                        )}
                      >
                        {"Email"}
                      </h4>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___3Ri3Z
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__me5Tv
                          )}
                        >
                          {"solutions@excell.energy"}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
                <div
                  data-plasmic-name={"contactCard4"}
                  data-plasmic-override={overrides.contactCard4}
                  className={classNames(projectcss.all, sty.contactCard4)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ovJ5D)}
                  >
                    <Facebook1SvgIcon
                      className={classNames(projectcss.all, sty.svg__gfNoi)}
                      role={"img"}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___6JMrc
                      )}
                    >
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__rFufn
                        )}
                      >
                        {"Facebook Page"}
                      </h4>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___10RHi
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qwuTb
                          )}
                        >
                          {"Excell Energy & Powergen Corp"}
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
              </Stack__>
              <div className={classNames(projectcss.all, sty.columns__kKqEq)}>
                <div
                  data-plasmic-name={"card5"}
                  data-plasmic-override={overrides.card5}
                  className={classNames(projectcss.all, sty.card5)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__awdYm)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__lZIpa)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vtlAi
                        )}
                      >
                        {"Can\u2019t find what you need?"}
                      </div>
                      <h1
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1__tBPdA
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"We got you covered!"}
                          </span>
                        </React.Fragment>
                      </h1>
                    </Stack__>
                  </Stack__>
                </div>
                <div
                  data-plasmic-name={"card6"}
                  data-plasmic-override={overrides.card6}
                  className={classNames(projectcss.all, sty.card6)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sQpYb)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__chDbS)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__so7Mn
                        )}
                      >
                        {
                          "Let our experts guide you in finding the best energy solution for your business or industry."
                        }
                      </div>
                      <PlasmicLink__
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          sty.link___7BLbP
                        )}
                        component={Link}
                        href={`/get-solar`}
                        platform={"nextjs"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bHoif
                          )}
                        >
                          {"Send Us Your Questions"}
                        </div>
                      </PlasmicLink__>
                    </Stack__>
                  </Stack__>
                </div>
              </div>
            </Stack__>
          </Stack__>
          <footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames(projectcss.all, sty.footer)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__woOz1)}>
              <div
                data-plasmic-name={"section5"}
                data-plasmic-override={overrides.section5}
                className={classNames(projectcss.all, sty.section5)}
              >
                <div
                  data-plasmic-name={"brandLogo3"}
                  data-plasmic-override={overrides.brandLogo3}
                  className={classNames(projectcss.all, sty.brandLogo3)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___9WWt)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "50%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"240px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/copy_of_excell_website/images/excellHorizontalLogoPng.png",
                      fullWidth: 2001,
                      fullHeight: 706,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    data-plasmic-name={"section6"}
                    data-plasmic-override={overrides.section6}
                    className={classNames(projectcss.all, sty.section6)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__prrk)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cWz73
                        )}
                      >
                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__rLRw2
                          )}
                        >
                          {"Better Energy, Better Business."}
                        </h4>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aMz4
                          )}
                        >
                          {
                            "We help businesses thrive by turning unused spaces into energy-saving assets. Our end-to-end solar solutions\u2014from expert energy assessments to premium installations and lifetime support\u2014are built for long-term value, reliability, and sustainability."
                          }
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bPyEk
                          )}
                        >
                          {
                            "\u00a9 Copyright 2025 Excell Energy and Powergen Inc. All rights reserved."
                          }
                        </div>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___6QM0M)}
                    >
                      <div
                        data-plasmic-name={"whereToFindUs3"}
                        data-plasmic-override={overrides.whereToFindUs3}
                        className={classNames(
                          projectcss.all,
                          sty.whereToFindUs3
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dfGxZ
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__vTmmF
                            )}
                          >
                            {"Where to find us?"}
                          </h5>
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jnzav
                          )}
                        >
                          <GeoAltFill1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__xOms
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jaYbr
                            )}
                          >
                            {
                              "Unit 2618, 26th flr, High Street South Corporate Plaza Tower 1 26th St, cor 9th Ave, 1634 Taguig, Philippines"
                            }
                          </div>
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"connectWithUs4"}
                        data-plasmic-override={overrides.connectWithUs4}
                        className={classNames(
                          projectcss.all,
                          sty.connectWithUs4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__a5OK
                          )}
                        >
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__kAwc9
                            )}
                          >
                            {"Connect with us!"}
                          </h5>
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6IGy8
                          )}
                        >
                          <EnvelopeFill1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__nRIoj
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__aPmAk
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"solutions@excell.energy"}
                          </PlasmicLink__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ppR0
                          )}
                        >
                          <Linkedin2SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zaWKj
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__cDvKo
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"Excell Energy and PowerGen Corp."}
                          </PlasmicLink__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fxwIt
                          )}
                        >
                          <Facebook2SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__dKdS9
                            )}
                            role={"img"}
                          />

                          <PlasmicLink__
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link___2Tvto
                            )}
                            component={Link}
                            href={"https://www.plasmic.app/"}
                            platform={"nextjs"}
                          >
                            {"Excell Energy and PowerGen Corp."}
                          </PlasmicLink__>
                        </Stack__>
                      </div>
                      <div
                        data-plasmic-name={"getSolar3"}
                        data-plasmic-override={overrides.getSolar3}
                        className={classNames(projectcss.all, sty.getSolar3)}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fbjBc
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__tGblf
                            )}
                            component={Link}
                            href={`/get-solar`}
                            platform={"nextjs"}
                          >
                            <h5
                              className={classNames(
                                projectcss.all,
                                projectcss.h5,
                                projectcss.__wab_text,
                                sty.h5__umZoI
                              )}
                            >
                              {"Get Solar"}
                            </h5>
                            <ArrowUpRightCircleFill2SvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__p3IJ
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </Stack__>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </footer>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  contactUsPage: [
    "contactUsPage",
    "landingPage",
    "container2",
    "heading",
    "navigationBar",
    "logo3",
    "solution3",
    "logo4",
    "container",
    "card",
    "contactCard",
    "contactCard2",
    "contactCard3",
    "contactCard4",
    "card5",
    "card6",
    "footer",
    "section5",
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],

  landingPage: [
    "landingPage",
    "container2",
    "heading",
    "navigationBar",
    "logo3",
    "solution3",
    "logo4"
  ],

  container2: ["container2", "heading"],
  heading: ["heading"],
  navigationBar: ["navigationBar", "logo3", "solution3", "logo4"],
  logo3: ["logo3"],
  solution3: ["solution3"],
  logo4: ["logo4"],
  container: [
    "container",
    "card",
    "contactCard",
    "contactCard2",
    "contactCard3",
    "contactCard4",
    "card5",
    "card6"
  ],

  card: [
    "card",
    "contactCard",
    "contactCard2",
    "contactCard3",
    "contactCard4",
    "card5",
    "card6"
  ],

  contactCard: ["contactCard"],
  contactCard2: ["contactCard2"],
  contactCard3: ["contactCard3"],
  contactCard4: ["contactCard4"],
  card5: ["card5"],
  card6: ["card6"],
  footer: [
    "footer",
    "section5",
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],

  section5: [
    "section5",
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],

  brandLogo3: [
    "brandLogo3",
    "section6",
    "whereToFindUs3",
    "connectWithUs4",
    "getSolar3"
  ],

  section6: ["section6", "whereToFindUs3", "connectWithUs4", "getSolar3"],
  whereToFindUs3: ["whereToFindUs3"],
  connectWithUs4: ["connectWithUs4"],
  getSolar3: ["getSolar3"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicContactUs__ArgProps,
          internalVariantPropNames: PlasmicContactUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicContactUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "contactUsPage") {
    func.displayName = "PlasmicContactUs";
  } else {
    func.displayName = `PlasmicContactUs.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth(WrappedComponent) {
  const WithUsePlasmicAuthComponent = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "dFCW3EJJak7e5FJ1Eb9ZNV"
    });
    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicContactUs = Object.assign(
  // Top-level PlasmicContactUs renders the root element
  withUsePlasmicAuth(makeNodeComponent("contactUsPage")),
  {
    // Helper components rendering sub-elements
    landingPage: makeNodeComponent("landingPage"),
    container2: makeNodeComponent("container2"),
    heading: makeNodeComponent("heading"),
    navigationBar: makeNodeComponent("navigationBar"),
    logo3: makeNodeComponent("logo3"),
    solution3: makeNodeComponent("solution3"),
    logo4: makeNodeComponent("logo4"),
    container: makeNodeComponent("container"),
    card: makeNodeComponent("card"),
    contactCard: makeNodeComponent("contactCard"),
    contactCard2: makeNodeComponent("contactCard2"),
    contactCard3: makeNodeComponent("contactCard3"),
    contactCard4: makeNodeComponent("contactCard4"),
    card5: makeNodeComponent("card5"),
    card6: makeNodeComponent("card6"),
    footer: makeNodeComponent("footer"),
    section5: makeNodeComponent("section5"),
    brandLogo3: makeNodeComponent("brandLogo3"),
    section6: makeNodeComponent("section6"),
    whereToFindUs3: makeNodeComponent("whereToFindUs3"),
    connectWithUs4: makeNodeComponent("connectWithUs4"),
    getSolar3: makeNodeComponent("getSolar3"),
    // Metadata about props expected for PlasmicContactUs
    internalVariantProps: PlasmicContactUs__VariantProps,
    internalArgProps: PlasmicContactUs__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicContactUs;
/* prettier-ignore-end */
